name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: src
    - name: Build
      run: dotnet build --no-restore
      working-directory: src
    - name: Dib to Markdown
      run: dotnet fsi DibToMarkdown.fsx
      working-directory: src/Scripts
    - name: Dib to scripts
      run: dotnet fsi DibToActualsScript.fsx
      working-directory: src/Scripts
    - name: Create regression
      run: dotnet fsi CreateRegressionTestActuals.fsx
      working-directory: src/Scripts
    - name: Test
      run: dotnet test --verbosity normal
      working-directory: src
    - name: Publish FsExcel
      if: matrix.os == 'ubuntu-latest'
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
          PROJECT_FILE_PATH: src/FsExcel/FsExcel.fsproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}      
